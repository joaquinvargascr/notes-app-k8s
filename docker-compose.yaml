services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    ports:
    - '3306:3306'
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - db_data:/var/lib/mysql # I want to manage volumes manually.

  php:
    container_name: "${PROJECT_NAME}_php"
    build:
      context: .
      dockerfile: Dockerfile
    extra_hosts:
    - "host.docker.internal:host-gateway"
    # volumes:
    # - ./:/var/www/html:cached
  # php:
  #   image: wodby/php:$PHP_TAG
  #   container_name: "${PROJECT_NAME}_php"
  #   environment:
  #     # By default xdebug extension also disabled.
  #     PHP_EXTENSIONS_DISABLE: xhprof,spx
  #     PHP_MAIL_MIXED_LF_AND_CRLF: 'On'
  #     # Mailpit:
  #     MSMTP_HOST: mailpit
  #     MSMTP_PORT: 1025
  # ##      # OpenSMTPD:
  # ##      MSMTP_HOST: opensmtpd
  # ##      MSMTP_PORT: 25
  #     DB_HOST: $DB_HOST
  #     DB_USER: $DB_USERNAME
  #     DB_PASSWORD: $DB_PASSWORD
  #     DB_NAME: $DB_DATABASE
  #     PHP_FPM_USER: wodby
  #     PHP_FPM_GROUP: wodby
  # ### Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
  # ##      PHP_XDEBUG_MODE: debug
  # ##      PHP_XDEBUG_MODE: profile
  # ##      PHP_XDEBUG_USE_COMPRESSION: false
  # ##      PHP_IDE_CONFIG: serverName=my-ide
  # ##      PHP_XDEBUG_IDEKEY: "my-ide"
  #   extra_hosts:
  #   - "host.docker.internal:host-gateway"
  #   volumes:
  #   - ./:/var/www/html:cached

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
    - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/public
    volumes:
    - ./:/var/www/html:cached
## Alternative for macOS users: Mutagen https://wodby.com/docs/stacks/php/local#docker-for-mac
#    - backend:/var/www/html
    labels:
    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
    - '8000:80'
#    - '8080:8080' # Dashboard
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
